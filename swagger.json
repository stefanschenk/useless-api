{
  "swagger": "2.0",
  "info": {
    "description": "REST api for use with workshop introduction CodeceptJS",
    "version": "1.0.0",
    "title": "Useless API",
    "contact": {
      "email": "stefan@detesters.nl"
    }
  },
  "host": "localhost:3001",
  "basePath": "/",
  "tags": [
    {
      "name": "quotes",
      "description": "Manage a list of quotes"
    },
    {
      "name": "contacts",
      "description": "Access to your contact list"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/quotes": {
      "get": {
        "tags": ["quotes"],
        "summary": "Returns a list of quotes",
        "description": "",
        "operationId": "getQuotes",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseQuote"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["quotes"],
        "summary": "Add a new quote",
        "description": "",
        "operationId": "addQuote",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "quote",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Quote"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseQuote"
            }
          }
        }
      }
    },
    "/quotes/{quoteId}": {
      "put": {
        "tags": ["quotes"],
        "summary": "Update quote by ID",
        "description": "",
        "operationId": "updateQuote",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of the quote that needs to be updated",
            "required": true,
            "type": "string",
            "x-example": "5b2f76654a727b1360e69df1"
          },
          {
            "in": "body",
            "name": "body",
            "description": "quote",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Quote"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "No quote found."
          }
        }
      },
      "get": {
        "tags": ["quotes"],
        "summary": "Find quote by ID",
        "description": "",
        "operationId": "getQuoteById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of the quote that you want to retrieve",
            "required": true,
            "type": "string",
            "x-example": "5b2f76654a727b1360e69df1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseQuote"
            }
          },
          "404": {
            "description": "No quote found."
          }
        }
      },
      "delete": {
        "tags": ["quotes"],
        "summary": "Delete quote by ID",
        "description": "",
        "operationId": "deleteQuote",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of the quote that needs to be deleted",
            "required": true,
            "type": "string",
            "x-example": "5b2f76654a727b1360e69df1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "No quote found."
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": ["contacts"],
        "summary": "Returns a list of contacts",
        "description": "",
        "operationId": "getContacts",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseContact"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["contacts"],
        "summary": "Add a new contact",
        "description": "",
        "operationId": "addContact",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "contact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseContact"
            }
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "put": {
        "tags": ["contacts"],
        "summary": "Update contact by ID",
        "description": "",
        "operationId": "updateContact",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "ID of the contact that needs to be updated",
            "required": true,
            "type": "string",
            "x-example": "5b2f76654a727b1360e69df1"
          },
          {
            "in": "body",
            "name": "body",
            "description": "contact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "No contact found."
          }
        }
      },
      "get": {
        "tags": ["contacts"],
        "summary": "Find contact by ID",
        "description": "",
        "operationId": "getContactById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "ID of the contact that you want to retrieve",
            "required": true,
            "type": "string",
            "x-example": "5b2f76654a727b1360e69df1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseContact"
            }
          },
          "404": {
            "description": "No contact found."
          }
        }
      },
      "delete": {
        "tags": ["contacts"],
        "summary": "Delete contact by ID",
        "description": "",
        "operationId": "deleteContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "ID of the contact that needs to be deleted",
            "required": true,
            "type": "string",
            "x-example": "5b2f76654a727b1360e69df1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "No contact found."
          }
        }
      }
    }
  },
  "definitions": {
    "Contact": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string",
          "description": "Enter an telephone including countrycode (+31)"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "street": {
              "type": "string",
              "description": "Street and housenumber"
            },
            "postcode": {
              "type": "string"
            },
            "city": {
              "type": "string"
            }
          }
        }
      }
    },
    "Quote": {
      "type": "object",
      "properties": {
        "quote": {
          "type": "string"
        },
        "communicator": {
          "type": "string",
          "description": "who said it"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "ResponseContact": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string",
          "description": "Enter an telephone including countrycode (+31)"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "street": {
              "type": "string",
              "description": "Street and housenumber"
            },
            "postcode": {
              "type": "string"
            },
            "city": {
              "type": "string"
            }
          }
        },
        "__v": {
          "type": "integer"
        }
      }
    },
    "ResponseQuote": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "quote": {
          "type": "string"
        },
        "communicator": {
          "type": "string",
          "description": "who said it"
        },
        "source": {
          "type": "string"
        },
        "__v": {
          "type": "integer"
        }
      }
    }
  }
}
